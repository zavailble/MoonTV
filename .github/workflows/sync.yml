name: Upstream Sync

on:
  schedule:
    - cron: "0 */6 * * *" # run every 6 hours
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  sync_latest_from_upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.fork }}

    steps:
      # Step 1: run a standard checkout action
      - name: Checkout target repo
        uses: actions/checkout@v4

      # Step 2：【核心新增】拉取上游的 README.md 并覆盖本地（云端执行）
      - name: Overwrite local README.md with upstream version (cloud-only)
        run: |
          # 1. 添加上游仓库地址（若已存在则忽略，避免报错）
          git remote add upstream https://github.com/senshinya/MoonTV.git || true
          
          # 2. 拉取上游仓库最新代码（确保获取到上游最新的 README.md）
          git fetch upstream
          
          # 3. 用上游 main 分支的 README.md 覆盖当前仓库的 README.md
          git checkout upstream/main -- README.md
          
          # 4. 若 README.md 有修改，自动提交并推送到你的 Fork 仓库
          if git status --porcelain | grep -q README.md; then
            git config --global user.name "GitHub Actions" # 配置提交者信息（云端临时配置）
            git config --global user.email "actions@github.com"
            git add README.md
            git commit -m "Overwrite README.md with upstream version to fix sync conflict"
            git push origin main # 推送到你的 Fork 仓库（云端完成）
          fi

      # Step 3: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: senshinya/MoonTV
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }}
          upstream_pull_args: --allow-unrelated-histories

          
      - name: Sync check
        if: failure()
        run: |
          echo "[Error] Due to a change in the workflow file of the upstream repository, GitHub has automatically suspended the scheduled automatic update. You need to manually sync your fork."
          exit 1

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 2
